version: '3'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - 2181:2181
    hostname: zookeeper
    networks:
      - yoda

  kafka:
    image: wurstmeister/kafka
    command: [start-kafka.sh]
    depends_on:
      - zookeeper
    networks:
      - yoda
    ports:
      - 9092:9092
    hostname: kafka
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_CREATE_TOPICS: "test:1:1,data-model:1:1,data-post:1:1,data-session:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  gateway_server:
    build: "../GatewayServer"
    ports:
      - 3100:3100
    depends_on:
      - "kafka"
    restart: on-failure
    networks:
      - yoda
  
  data_retrieval:
    build: "../DataRetrieval"
    depends_on: 
      - kafka
    ports: 
      - 3300:3300
    restart: on-failure
    networks: 
      - yoda
    
  user:
    build: "../User"
    ports:
      - 3200:3200
    restart: on-failure
    networks: 
      - yoda
  
  realtime:
    build: "../RealTime"
    depends_on: 
      - kafka
    ports:
      - 3500:3500
    restart: on-failure
    networks: 
      - yoda
    
  data_model:
    build: "../DataModel"
    depends_on: 
      - kafka
      - data_retrieval
    restart: on-failure
    networks: 
      - yoda
    
  data_postprocess:
    build: "../DataPostProcess"
    depends_on: 
      - kafka
    restart: on-failure
    networks: 
      - yoda
  
  session:
    build: "../Session/KafkaConsumer"
    depends_on: 
      - kafka
    ports:
      - 3400:3400
    restart: on-failure
    networks: 
      - yoda
  
  frontend:
    build: "../ui"
    depends_on: 
      - gateway_server
      - user
    ports:
      - 3000:3000
    restart: on-failure
    networks: 
      - yoda
    
networks: 
  yoda:
    external: true